@page "/events/{EventId:int:min(1)}"
@inject EventService EventService
@inject NavigationManager NavigationManager

<h3>Event Details</h3>

@if (isLoading)
{
    <p>Loading event details...</p>
}
else if (eventDetails != null)
{
    <p><strong>Name:</strong> @eventDetails.Name</p>
    <p><strong>Date:</strong> @eventDetails.Date.ToShortDateString()</p>
    <p><strong>Location:</strong> @eventDetails.Location</p>
    <a href="@($"/events/{EventId}/register")">Register</a>
}
else
{
    <p style="color:red;">Event not found.</p>
}

<br />
<a href="/events">Go back to Events</a>

@if (eventDetails?.Attendees?.Count > 0)
{
    <h4>Attendance</h4>
    <ul>
        @foreach (var attendee in eventDetails.Attendees)
        {
            <li>
                <input type="checkbox" @bind="attendee.IsPresent" />
                @attendee.Name (@attendee.Email)
            </li>
        }
    </ul>
}

@code {
    [Parameter]
    public int EventId { get; set; }

    private EventCard? eventDetails;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        if (EventId < 1)
        {
            NavigationManager.NavigateTo("/notfound");
            return;
        }

        eventDetails = await EventService.GetEventByIdAsync(EventId);

        if (eventDetails == null)
        {
            NavigationManager.NavigateTo("/notfound");
            return;
        }

        isLoading = false;
    }
}